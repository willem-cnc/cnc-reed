; do_model
; program for modelling a bassoon reed

o<do_model> sub

   #<safe-z> = 10
   #<feed-rate> = 500

   #<element-m> = #<_first-m>

   G0 X-15 Y#[#<element-m> + #<_m-y>]
   G0 Z0

   F#<feed-rate>
   G1 X[-#[#<element-m> + #<_m-x>]-#<_delta-x>]
   o100 while [#<element-m> LE #<_last-m>]
      G1 X[-#[#<element-m> + #<_m-x>]-#<_delta-x>] Y#[#<element-m> + #<_m-y>]
      #<element-m> = [#<element-m> + #<_m-s>]
   o100 endwhile

   #<element-m> = #<_last-m>
   o110 while [#<element-m> GE #<_first-m>]
      G1 X[-#[#<element-m> + #<_m-x>]-#<_delta-x>] Y[#<_reed-length> - #[#<element-m> + #<_m-y>]]
      #<element-m> = [#<element-m> - #<_m-s>]
   o110 endwhile

   #<element-m> = #<_first-m>
   G0 Z#<safe-z>
   G0 X15 Y[#<_reed-length> - #[#<element-m> + #<_m-y>]]
   G0 Z0
   G1 X[#[#<element-m> + #<_m-x>]+#<_delta-x>]
   o120 while [#<element-m> LE #<_last-m>]
      G1 X[#[#<element-m> + #<_m-x>]+#<_delta-x>] Y[#<_reed-length> - #[#<element-m> + #<_m-y>]]
      #<element-m> = [#<element-m> + #<_m-s>]
   o120 endwhile

   #<element-m> = #<_last-m>
   o130 while [#<element-m> GE #<_first-m>]
      G1 X[#[#<element-m> + #<_m-x>]+#<_delta-x>] Y#[#<element-m> + #<_m-y>]
      #<element-m> = [#<element-m> - #<_m-s>]
   o130 endwhile

   G0 Z#<safe-z>

o<do_model> endsub

M2       ; programm end
