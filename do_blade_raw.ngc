; do_blade_raw
; program for production of bassoon reed blade
; the program forms 1 blade so the second is done by rotating the reed

o<do_blade_raw> sub

; blade is made with right hand circuit
; outside to middle of the reed

   #<horizontal-feed> = 500
   #<vertical-feed>   = 250

   #<angle> = #<_b-start-angle>

   o100 while [#<angle> GE -.1 ]
      #<element> = #<_first-p>
      ;
      ; make line on left hand side
      ;
      o120 while [#<element> LE #<_last-p>]
         #<new-r> = [#<_i-radius> + #[#<element> + #<_p-z>]]
         #<new-x> = [#<new-r> * sin[#<angle>]]
         #<new-y> = [#[#<element> + #<_m-y>]]
         #<new-z> = [-#<_i-radius> + [#<new-r> * cos[#<angle>]]]
         o125 if [#<element> EQ #<_first-p>]
            G1 X-#<new-x> Y#<new-y> F#<horizontal-feed>
            G1 Z#<new-z> F#<vertical-feed>
         o125 else
            G1 X-#<new-x> Y#<new-y> Z#<new-z> F#<horizontal-feed>
         o125 endif
         #<element> = [#<element> + #<_m-s>]
      o120 endwhile
      G0 Z#<_safe-z>
      ;
      ; make line on right hand side
      ;
      #<element> = #<_last-p>
      o130 while [#<element> GE #<_first-p>]
         #<new-r> = [#<_i-radius> + #[#<element> + #<_p-z>]]
         #<new-x> = [#<new-r> * sin[#<angle>]]
         #<new-y> = [#[#<element> + #<_m-y>]]
         #<new-z> = [-#<_i-radius> + [#<new-r> * cos[#<angle>]]]
         o135 if [#<element> EQ #<_last-p>]
            G1 X#<new-x> Y#<new-y> F#<horizontal-feed>
            G1 Z#<new-z> F#<vertical-feed>
         o135 else
            G1 X#<new-x> Y#<new-y> Z#<new-z> F#<horizontal-feed>
         o135 endif
         #<element> = [#<element> - #<_m-s>]
      o130 endwhile

      G0 Z#<_safe-z>
      ;
      ; next angle
      ;
      #<angle> = [#<angle> - #<_b-angle-step>]
   o100 endwhile

o<do_blade> endsub

M2    ; programm end
