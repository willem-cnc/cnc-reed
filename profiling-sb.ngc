;
; profiling program (single barrel)
; same profile over width of the blade
;
   o<version> call                     ; display set version
   o<machine> call                     ; get x,y & z origin definitions
   o<reed> call                        ; get reed parameters

   G17      ; xy plane
   G54      ; coord system 1
   G40      ; compensation off
   G49      ; tool length comp off
   G80      ; canning cycle off
   G90      ; absolute mode
   G21      ; metric
   G61      ; exact mode

   ; profile definitions from calling programm
   ; #<_first-p>        ; start of profile table
   ; #<_last-p>         ; last entry of profile table
   ; #<_m-y>            ; element measure point from bottom
   ; #<_m-x>            ; element half model width
   ; #<_p-z>            ; element raw z (first pass)
   ; #<_m-s>            ; element size

   G53 G0 Z0               ; safe hight

   ;
   ; parameters
   ;
   #<z-margin>       = 0               ; extra margin for smoothing/testing
   #<safe-z>         = 3

   M5                      ; stop spindle
   
   #<_req-tool> = 1        ; ball nose r = .5 mm
   o<change-tool> call     ; change tool and messure
   G10 L2 P1 X#<_px-origin> Y#<_py-origin> Z[#<_value>-#<_z-probe>+#<_pz-origin>+#<z-margin>]

   S1000 M3                ; start spindle clock wise
   G4 P3                   ; wait 3 seconds for spindlespeed
   G0 X-#[#<_last-p> + #<_m-x>] Y#[#<_first-p> + #<_m-y>] ; initial move
   G0 Z#<safe-z>

   ; blade is made with right hand circuit
   ; outside to middle of the reed
   
   #<horizontal-feed> = 500
   #<vertical-feed>   = 250

   #<angle> = #<_b-start-angle>

   o100 while [#<angle> GE -.1 ]
      #<element> = #<_first-p>
      ;
      ; make line on left hand side
      ;
      o120 while [#<element> LE #<_last-p>]
         #<new-r> = [#<_i-radius> + #[#<element> + #<_p-z>]]
         #<new-x> = [#<new-r> * sin[#<angle>]]
         #<new-y> = [#[#<element> + #<_m-y>]]
         #<new-z> = [-#<_i-radius> + [#<new-r> * cos[#<angle>]]]
         o125 if [#<element> EQ #<_first-p>]
            G1 X-#<new-x> Y#<new-y> F#<horizontal-feed>
            G1 Z#<new-z> F#<vertical-feed>
         o125 else
            G1 X-#<new-x> Y#<new-y> Z#<new-z> F#<horizontal-feed>
         o125 endif
         #<element> = [#<element> + #<_m-s>]
      o120 endwhile
      G0 Z#<safe-z>
      ;
      ; make line on right hand side
      ;
      #<element> = #<_last-p>
      o130 while [#<element> GE #<_first-p>]
         #<new-r> = [#<_i-radius> + #[#<element> + #<_p-z>]]
         #<new-x> = [#<new-r> * sin[#<angle>]]
         #<new-y> = [#[#<element> + #<_m-y>]]
         #<new-z> = [-#<_i-radius> + [#<new-r> * cos[#<angle>]]]
         o135 if [#<element> EQ #<_last-p>]
            G1 X#<new-x> Y#<new-y> F#<horizontal-feed>
            G1 Z#<new-z> F#<vertical-feed>
         o135 else
            G1 X#<new-x> Y#<new-y> Z#<new-z> F#<horizontal-feed>
         o135 endif
         #<element> = [#<element> - #<_m-s>]
      o130 endwhile

      G0 Z#<safe-z>
      ;
      ; next angle
      ;
      #<angle> = [#<angle> - #<_b-angle-step>]
   o100 endwhile

   M5                      ; stop spindle
   G53 G0 Z0

   G54      ; coord system 1
   G90      ; absolute  distance
   G80      ; canning cycle off
   G40      ; compensation off
   G64      ; cancel exact mode
   M2       ; end of programm



